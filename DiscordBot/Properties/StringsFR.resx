<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="allcharacters_header" xml:space="preserve">
    <value>Personnages :</value>
  </data>
  <data name="allcharacters_header_filter" xml:space="preserve">
    <value>Personnages correspondant au filtre '{0}'</value>
  </data>
  <data name="bot_verbose" xml:space="preserve">
    <value>Le status verbeux du bot (pour vous uniquement) a été mis à {0}.</value>
  </data>
  <data name="bot_verbose_error" xml:space="preserve">
    <value>Echec de changement du status verbeux du bot : {0}.</value>
  </data>
  <data name="characters_header" xml:space="preserve">
    <value>Personnages par défaut :</value>
  </data>
  <data name="characters_header_filter" xml:space="preserve">
    <value>Personnages par défaut correspondant au filtre '{0}'</value>
  </data>
  <data name="character_created" xml:space="preserve">
    <value>{0} a été créé avec succès.</value>
  </data>
  <data name="character_creation_failed" xml:space="preserve">
    <value>Echec de création du personnage: {0}.</value>
  </data>
  <data name="character_default_failed" xml:space="preserve">
    <value>{0} n'a pas pu être défini comme votre personnage par défaut : {1}.</value>
  </data>
  <data name="character_default_set" xml:space="preserve">
    <value>{0} a été défini comme votre personnage par défaut.</value>
  </data>
  <data name="character_not_found" xml:space="preserve">
    <value>Pas de personnage trouvé ayant le nom ou l'alias '{0}'.</value>
  </data>
  <data name="character_update_failed" xml:space="preserve">
    <value>Echec de mise à jour du personnage: {0}.</value>
  </data>
  <data name="character_update_incomplete" xml:space="preserve">
    <value>Des erreurs ont eu lieu lors de la mise à jour de {0}:\n{1}\nLe reste (le cas échéant) a été enregistré.</value>
  </data>
  <data name="command_help" xml:space="preserve">
    <value>Aide pour la commande **{0}{1}**\n\nAliases:</value>
  </data>
  <data name="command_not_found" xml:space="preserve">
    <value>La commande **{0}** n'a pas été trouvée.</value>
  </data>
  <data name="command_parameters" xml:space="preserve">
    <value>Paramètres : {}: {}\n</value>
  </data>
  <data name="command_summary" xml:space="preserve">
    <value>Résumé : {0}\n\n</value>
  </data>
  <data name="gm_add" xml:space="preserve">
    <value>'{0}' est à présent MJ sur le serveur.</value>
  </data>
  <data name="gm_already" xml:space="preserve">
    <value>'{0}' est déjà MJ sur le serveur.</value>
  </data>
  <data name="gm_not" xml:space="preserve">
    <value>'{0}' n'est pas MJ sur le serveur.</value>
  </data>
  <data name="gm_removed" xml:space="preserve">
    <value>'{0}' n'est plus MJ sur le serveur.</value>
  </data>
  <data name="help_header" xml:space="preserve">
    <value>Commandes disponibles pour le bot. Pour avoir plus de détails à propos de la commande *cmd*, envoyez **{0}help cmd**.</value>
  </data>
  <data name="list_failed" xml:space="preserve">
    <value>Echec de génération de la liste de personnages : {0}.</value>
  </data>
  <data name="local_changed" xml:space="preserve">
    <value>La langue a été changée en '{0}'.</value>
  </data>
  <data name="local_too_long" xml:space="preserve">
    <value>Echec de changement de la langue en '{0}' : le code doit faire deux charactères.</value>
  </data>
  <data name="message_edit_error" xml:space="preserve">
    <value>Echec de modification du message : {0}.</value>
  </data>
  <data name="message_send_error" xml:space="preserve">
    <value>Echec d'envoi du message : {0}.</value>
  </data>
  <data name="mycharacters_header" xml:space="preserve">
    <value>Personnages vous appartenant :</value>
  </data>
  <data name="mycharacters_header_filter" xml:space="preserve">
    <value>Personnages vous appartenant correspondant au filtre '{0}'</value>
  </data>
  <data name="no_character_found" xml:space="preserve">
    <value>Aucun personnage n'a été trouvé</value>
  </data>
  <data name="prefix_changed" xml:space="preserve">
    <value>Le préfixe a été défini à '{0}'</value>
  </data>
  <data name="prefix_failed" xml:space="preserve">
    <value>Echec de changement du préfix en '{0}' : trop de conflits possibles.</value>
  </data>
  <data name="private_channel_failed" xml:space="preserve">
    <value>#{0} n'a pas pu être défini comme votre salon privré : {1}.</value>
  </data>
  <data name="private_channel_set" xml:space="preserve">
    <value>#{0} a été défini comme votre salon privé.</value>
  </data>
  <data name="property_set_error" xml:space="preserve">
    <value>'{0}' n'a pas pu être défini à '{1}'.</value>
  </data>
  <data name="unknown_command" xml:space="preserve">
    <value>Commande '{0}' inconnue.</value>
  </data>
</root>